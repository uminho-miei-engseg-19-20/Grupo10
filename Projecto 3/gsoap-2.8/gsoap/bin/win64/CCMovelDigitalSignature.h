/* CCMovelDigitalSignature.h
   Generated by wsdl2h 2.8.103 from CCMovelDigitalSignature.wsdl and typemap.dat
   2020-06-23 16:43:48 GMT

   DO NOT INCLUDE THIS ANNOTATED FILE DIRECTLY IN YOUR PROJECT SOURCE CODE.
   USE THE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT'S SOURCE CODE.

gSOAP XML Web services tools
Copyright (C) 2000-2020, Robert van Engelen, Genivia Inc. All Rights Reserved.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

/**

@page page_notes Notes

@note HINTS:
 - Run soapcpp2 on CCMovelDigitalSignature.h to generate the SOAP/XML processing logic:
   Use soapcpp2 -I to specify paths for #import
   Use soapcpp2 -j to generate improved proxy and server classes.
   Use soapcpp2 -r to generate a report.
 - Edit 'typemap.dat' to control namespace bindings and type mappings:
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Run Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h -c to generate pure C code.
 - Use wsdl2h -R to include the REST operations defined by the WSDLs.
 - Use wsdl2h -O3 or -O4 to optimize by removing unused schema components.
 - Use wsdl2h -d to enable DOM support for xsd:any and xsd:anyType.
 - Use wsdl2h -F to simulate struct-type derivation in C (also works in C++).
 - Use wsdl2h -f to generate flat C++ class hierarchy, removes type derivation.
 - Use wsdl2h -g to generate top-level root elements with readers and writers.
 - Use wsdl2h -U to map XML names to C++ Unicode identifiers instead of _xNNNN.
 - Use wsdl2h -u to disable the generation of unions.
 - Use wsdl2h -L to remove this @note and all other @note comments.
 - Use wsdl2h -nname to use name as the base namespace prefix instead of 'ns'.
 - Use wsdl2h -Nname for service prefix and produce multiple service bindings
 - Struct/class members serialized as XML attributes are annotated with a '@'.
 - Struct/class members that have a special role are annotated with a '$'.

@warning
   DO NOT INCLUDE THIS ANNOTATED FILE DIRECTLY IN YOUR PROJECT SOURCE CODE.
   USE THE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT'S SOURCE CODE:
   THE GENERATED soapStub.h FILE CONTAINS THIS CONTENT WITHOUT ANNOTATIONS.

@copyright LICENSE:
@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2020, Robert van Engelen, Genivia Inc. All Rights Reserved.
The wsdl2h tool and its generated software are released under the GPL.
This software is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org

This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial-use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt c++,w

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *   http://tempuri.org/                                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * $CONTAINER typemap variable:                                               *
 *   std::vector                                                              *
 *                                                                            *
\******************************************************************************/

#include <vector>
template <class T> class std::vector;

/******************************************************************************\
 *                                                                            *
 * $SIZE typemap variable:                                                    *
 *   int                                                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to 'typemap.dat' then rerun wsdl2h (use wsdl2h -t typemap.dat):

ns1 = "http://tempuri.org/"
ns2 = "http://Ama.Authentication.Service/Imports"
ns3 = "http://Ama.Authentication.Service/"
ns4 = "http://schemas.microsoft.com/2003/10/Serialization/"
ns5 = "http://schemas.datacontract.org/2004/07/Ama.Structures.CCMovelSignature"

*/

#define SOAP_NAMESPACE_OF_ns2	"http://Ama.Authentication.Service/Imports"
//gsoap ns2   schema namespace:	http://Ama.Authentication.Service/Imports
//gsoap ns2   schema form:	unqualified

#define SOAP_NAMESPACE_OF_ns3	"http://Ama.Authentication.Service/"
//gsoap ns3   schema namespace:	http://Ama.Authentication.Service/
//gsoap ns3   schema elementForm:	qualified
//gsoap ns3   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_ns4	"http://schemas.microsoft.com/2003/10/Serialization/"
//gsoap ns4   schema namespace:	http://schemas.microsoft.com/2003/10/Serialization/
//gsoap ns4   schema form:	qualified

#define SOAP_NAMESPACE_OF_ns5	"http://schemas.datacontract.org/2004/07/Ama.Structures.CCMovelSignature"
//gsoap ns5   schema namespace:	http://schemas.datacontract.org/2004/07/Ama.Structures.CCMovelSignature
//gsoap ns5   schema elementForm:	qualified
//gsoap ns5   schema attributeForm:	unqualified

/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/

/// Built-in XSD root type "xs:anyType".
///
/// @note Call virtual method soap_type() generated by soapcpp2 to check runtime type is SOAP_TYPE_xsd__anyType or a derived type.  Use option -P to remove this class.
class xsd__anyType
{ public:
    _XML __item;
    struct soap *soap;
};

/// Built-in type "xs:QName".
typedef std::string xsd__QName;

/// Built-in type "xs:base64Binary".
class xsd__base64Binary
{ public:
    unsigned char *__ptr;
    int __size;
    char *id, *type, *options; // NOTE: non-NULL for DIME/MIME/MTOM XOP attachments only
};

/// Built-in type "xs:byte".
typedef char xsd__byte;

/// Built-in type "xs:unsignedByte".
typedef unsigned char xsd__unsignedByte;

/// Primitive built-in type "xs:ID".
typedef std::string xsd__ID;

/// Class wrapper xsd__ID__ for built-in type "xs:ID" extends xsd__anyType.
/// @note Call virtual method soap_type() generated by soapcpp2 to check runtime type is SOAP_TYPE_xsd__ID__ or a derived type.  Use option -P to remove this class.
class xsd__ID__ : public xsd__anyType
{ public:
    xsd__ID                              __item                        ;
};

/// Primitive built-in type "xs:IDREF".
typedef std::string xsd__IDREF;

/// Class wrapper xsd__IDREF__ for built-in type "xs:IDREF" extends xsd__anyType.
/// @note Call virtual method soap_type() generated by soapcpp2 to check runtime type is SOAP_TYPE_xsd__IDREF__ or a derived type.  Use option -P to remove this class.
class xsd__IDREF__ : public xsd__anyType
{ public:
    xsd__IDREF                           __item                        ;
};

/// Class wrapper xsd__QName__ for built-in type "xs:QName" extends xsd__anyType.
/// @note Call virtual method soap_type() generated by soapcpp2 to check runtime type is SOAP_TYPE_xsd__QName__ or a derived type.  Use option -P to remove this class.
class xsd__QName__ : public xsd__anyType
{ public:
    xsd__QName                           __item                        ;
};

/// Primitive built-in type "xs:anyURI".
typedef std::string xsd__anyURI;

/// Class wrapper xsd__anyURI__ for built-in type "xs:anyURI" extends xsd__anyType.
/// @note Call virtual method soap_type() generated by soapcpp2 to check runtime type is SOAP_TYPE_xsd__anyURI__ or a derived type.  Use option -P to remove this class.
class xsd__anyURI__ : public xsd__anyType
{ public:
    xsd__anyURI                          __item                        ;
};

/// Class wrapper xsd__base64Binary__ for built-in type "xs:base64Binary" extends xsd__anyType.
/// @note Call virtual method soap_type() generated by soapcpp2 to check runtime type is SOAP_TYPE_xsd__base64Binary__ or a derived type.  Use option -P to remove this class.
class xsd__base64Binary__ : public xsd__anyType
{ public:
    xsd__base64Binary                    __item                        ;
};

/// Class wrapper xsd__boolean_ for built-in type "xs:boolean" extends xsd__anyType.
/// @note Call virtual method soap_type() generated by soapcpp2 to check runtime type is SOAP_TYPE_xsd__boolean_ or a derived type.  Use option -P to remove this class.
class xsd__boolean_ : public xsd__anyType
{ public:
    bool                                 __item                        ;
};

/// Class wrapper xsd__byte__ for built-in type "xs:byte" extends xsd__anyType.
/// @note Call virtual method soap_type() generated by soapcpp2 to check runtime type is SOAP_TYPE_xsd__byte__ or a derived type.  Use option -P to remove this class.
class xsd__byte__ : public xsd__anyType
{ public:
    xsd__byte                            __item                        ;
};

/// Class wrapper xsd__dateTime_ for built-in type "xs:dateTime" extends xsd__anyType.
/// @note Call virtual method soap_type() generated by soapcpp2 to check runtime type is SOAP_TYPE_xsd__dateTime_ or a derived type.  Use option -P to remove this class.
class xsd__dateTime_ : public xsd__anyType
{ public:
    time_t                               __item                        ;
};

/// Primitive built-in type "xs:decimal".
typedef std::string xsd__decimal;

/// Class wrapper xsd__decimal__ for built-in type "xs:decimal" extends xsd__anyType.
/// @note Call virtual method soap_type() generated by soapcpp2 to check runtime type is SOAP_TYPE_xsd__decimal__ or a derived type.  Use option -P to remove this class.
class xsd__decimal__ : public xsd__anyType
{ public:
    xsd__decimal                         __item                        ;
};

/// Class wrapper xsd__double_ for built-in type "xs:double" extends xsd__anyType.
/// @note Call virtual method soap_type() generated by soapcpp2 to check runtime type is SOAP_TYPE_xsd__double_ or a derived type.  Use option -P to remove this class.
class xsd__double_ : public xsd__anyType
{ public:
    double                               __item                        ;
};

/// Primitive built-in type "xs:duration".
typedef std::string xsd__duration;

/// Class wrapper xsd__duration__ for built-in type "xs:duration" extends xsd__anyType.
/// @note Call virtual method soap_type() generated by soapcpp2 to check runtime type is SOAP_TYPE_xsd__duration__ or a derived type.  Use option -P to remove this class.
class xsd__duration__ : public xsd__anyType
{ public:
    xsd__duration                        __item                        ;
};

/// Class wrapper xsd__float_ for built-in type "xs:float" extends xsd__anyType.
/// @note Call virtual method soap_type() generated by soapcpp2 to check runtime type is SOAP_TYPE_xsd__float_ or a derived type.  Use option -P to remove this class.
class xsd__float_ : public xsd__anyType
{ public:
    float                                __item                        ;
};

/// Class wrapper xsd__int_ for built-in type "xs:int" extends xsd__anyType.
/// @note Call virtual method soap_type() generated by soapcpp2 to check runtime type is SOAP_TYPE_xsd__int_ or a derived type.  Use option -P to remove this class.
class xsd__int_ : public xsd__anyType
{ public:
    int                                  __item                        ;
};

/// Class wrapper xsd__long_ for built-in type "xs:long" extends xsd__anyType.
/// @note Call virtual method soap_type() generated by soapcpp2 to check runtime type is SOAP_TYPE_xsd__long_ or a derived type.  Use option -P to remove this class.
class xsd__long_ : public xsd__anyType
{ public:
    LONG64                               __item                        ;
};

/// Class wrapper xsd__short_ for built-in type "xs:short" extends xsd__anyType.
/// @note Call virtual method soap_type() generated by soapcpp2 to check runtime type is SOAP_TYPE_xsd__short_ or a derived type.  Use option -P to remove this class.
class xsd__short_ : public xsd__anyType
{ public:
    short                                __item                        ;
};

/// Class wrapper xsd__string_ for built-in type "xs:string" extends xsd__anyType.
/// @note Call virtual method soap_type() generated by soapcpp2 to check runtime type is SOAP_TYPE_xsd__string_ or a derived type.  Use option -P to remove this class.
class xsd__string_ : public xsd__anyType
{ public:
    std::string                          __item                        ;
};

/// Class wrapper xsd__unsignedByte__ for built-in type "xs:unsignedByte" extends xsd__anyType.
/// @note Call virtual method soap_type() generated by soapcpp2 to check runtime type is SOAP_TYPE_xsd__unsignedByte__ or a derived type.  Use option -P to remove this class.
class xsd__unsignedByte__ : public xsd__anyType
{ public:
    xsd__unsignedByte                    __item                        ;
};

/// Class wrapper xsd__unsignedInt_ for built-in type "xs:unsignedInt" extends xsd__anyType.
/// @note Call virtual method soap_type() generated by soapcpp2 to check runtime type is SOAP_TYPE_xsd__unsignedInt_ or a derived type.  Use option -P to remove this class.
class xsd__unsignedInt_ : public xsd__anyType
{ public:
    unsigned int                         __item                        ;
};

/// Class wrapper xsd__unsignedLong_ for built-in type "xs:unsignedLong" extends xsd__anyType.
/// @note Call virtual method soap_type() generated by soapcpp2 to check runtime type is SOAP_TYPE_xsd__unsignedLong_ or a derived type.  Use option -P to remove this class.
class xsd__unsignedLong_ : public xsd__anyType
{ public:
    ULONG64                              __item                        ;
};

/// Class wrapper xsd__unsignedShort_ for built-in type "xs:unsignedShort" extends xsd__anyType.
/// @note Call virtual method soap_type() generated by soapcpp2 to check runtime type is SOAP_TYPE_xsd__unsignedShort_ or a derived type.  Use option -P to remove this class.
class xsd__unsignedShort_ : public xsd__anyType
{ public:
    unsigned short                       __item                        ;
};


/******************************************************************************\
 *                                                                            *
 * Forward Declarations                                                       *
 *                                                                            *
\******************************************************************************/


class _ns3__CCMovelSign;

class _ns3__CCMovelSignResponse;

class _ns3__GetCertificate;

class _ns3__GetCertificateResponse;

class _ns3__ValidateOtp;

class _ns3__ValidateOtpResponse;

class _ns3__CCMovelMultipleSign;

class _ns3__CCMovelMultipleSignResponse;

class _ns3__ForceSMS;

class _ns3__ForceSMSResponse;

class _ns3__GetCertificateWithPin;

class _ns3__GetCertificateWithPinResponse;

class ns5__SignRequest;

class ns5__SignStatus;

class ns5__SignResponse;

class ns5__ArrayOfHashStructure;

class ns5__HashStructure;

class ns5__MultipleSignRequest;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://Ama.Authentication.Service/Imports                                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://Ama.Authentication.Service/                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://schemas.microsoft.com/2003/10/Serialization/                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://schemas.datacontract.org/2004/07/Ama.Structures.CCMovelSignature  *
 *                                                                            *
\******************************************************************************/

/// @brief "http://schemas.microsoft.com/2003/10/Serialization/":char is a simpleType restriction of type xs:int.
///
typedef int ns4__char;

/// @brief Class wrapper for type ns4__char derived from xsd__anyType.
///
/// @note Use option -P to remove this class.
class ns4__char__ : public xsd__anyType
{ public:
    ns4__char                            __item;                       
};

/// @brief "http://schemas.microsoft.com/2003/10/Serialization/":duration is a simpleType restriction of type xs:duration.
///
/// Content pattern is "\\-?P(\\d*D)?(T(\\d*H)?(\\d*M)?(\\d*(\\.\\d*)?S)?)?".
/// Value range is -P10675199DT2H48M5.4775808S to P10675199DT2H48M5.4775807S.
typedef xsd__duration ns4__duration "\\-?P(\\d*D)?(T(\\d*H)?(\\d*M)?(\\d*(\\.\\d*)?S)?)?";

/// @brief Class wrapper for type ns4__duration derived from xsd__anyType.
///
/// @note Use option -P to remove this class.
class ns4__duration__ : public xsd__anyType
{ public:
    ns4__duration                        __item;                       
};

/// @brief "http://schemas.microsoft.com/2003/10/Serialization/":guid is a simpleType restriction of type xs:string.
///
/// Content pattern is "[\\da-fA-F]{8}-[\\da-fA-F]{4}-[\\da-fA-F]{4}-[\\da-fA-F]{4}-[\\da-fA-F]{12}".
typedef std::string ns4__guid "[\\da-fA-F]{8}-[\\da-fA-F]{4}-[\\da-fA-F]{4}-[\\da-fA-F]{4}-[\\da-fA-F]{12}";

/// @brief Class wrapper for type ns4__guid derived from xsd__anyType.
///
/// @note Use option -P to remove this class.
class ns4__guid__ : public xsd__anyType
{ public:
    ns4__guid                            __item;                       
};


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://schemas.datacontract.org/2004/07/Ama.Structures.CCMovelSignature  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://Ama.Authentication.Service/Imports                                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://Ama.Authentication.Service/                                       *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://Ama.Authentication.Service/":CCMovelSign
/// @brief "http://Ama.Authentication.Service/":CCMovelSign is a complexType.
///
/// @note class _ns3__CCMovelSign operations:
/// - _ns3__CCMovelSign* soap_new__ns3__CCMovelSign(soap*) allocate and default initialize
/// - _ns3__CCMovelSign* soap_new__ns3__CCMovelSign(soap*, int num) allocate and default initialize an array
/// - _ns3__CCMovelSign* soap_new_req__ns3__CCMovelSign(soap*, ...) allocate, set required members
/// - _ns3__CCMovelSign* soap_new_set__ns3__CCMovelSign(soap*, ...) allocate, set all public members
/// - _ns3__CCMovelSign::soap_default(soap*) default initialize members
/// - int soap_read__ns3__CCMovelSign(soap*, _ns3__CCMovelSign*) deserialize from a stream
/// - int soap_write__ns3__CCMovelSign(soap*, _ns3__CCMovelSign*) serialize to a stream
/// - _ns3__CCMovelSign* _ns3__CCMovelSign::soap_dup(soap*) returns deep copy of _ns3__CCMovelSign, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _ns3__CCMovelSign::soap_del() deep deletes _ns3__CCMovelSign data members, use only after _ns3__CCMovelSign::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _ns3__CCMovelSign::soap_type() returns SOAP_TYPE__ns3__CCMovelSign or derived type identifier
class _ns3__CCMovelSign
{ public:
/// Element "request" of type "http://schemas.datacontract.org/2004/07/Ama.Structures.CCMovelSignature":SignRequest.
    ns5__SignRequest*                    request                        0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://Ama.Authentication.Service/":CCMovelSignResponse
/// @brief "http://Ama.Authentication.Service/":CCMovelSignResponse is a complexType.
///
/// @note class _ns3__CCMovelSignResponse operations:
/// - _ns3__CCMovelSignResponse* soap_new__ns3__CCMovelSignResponse(soap*) allocate and default initialize
/// - _ns3__CCMovelSignResponse* soap_new__ns3__CCMovelSignResponse(soap*, int num) allocate and default initialize an array
/// - _ns3__CCMovelSignResponse* soap_new_req__ns3__CCMovelSignResponse(soap*, ...) allocate, set required members
/// - _ns3__CCMovelSignResponse* soap_new_set__ns3__CCMovelSignResponse(soap*, ...) allocate, set all public members
/// - _ns3__CCMovelSignResponse::soap_default(soap*) default initialize members
/// - int soap_read__ns3__CCMovelSignResponse(soap*, _ns3__CCMovelSignResponse*) deserialize from a stream
/// - int soap_write__ns3__CCMovelSignResponse(soap*, _ns3__CCMovelSignResponse*) serialize to a stream
/// - _ns3__CCMovelSignResponse* _ns3__CCMovelSignResponse::soap_dup(soap*) returns deep copy of _ns3__CCMovelSignResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _ns3__CCMovelSignResponse::soap_del() deep deletes _ns3__CCMovelSignResponse data members, use only after _ns3__CCMovelSignResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _ns3__CCMovelSignResponse::soap_type() returns SOAP_TYPE__ns3__CCMovelSignResponse or derived type identifier
class _ns3__CCMovelSignResponse
{ public:
/// Element "CCMovelSignResult" of type "http://schemas.datacontract.org/2004/07/Ama.Structures.CCMovelSignature":SignStatus.
    ns5__SignStatus*                     CCMovelSignResult              0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://Ama.Authentication.Service/":GetCertificate
/// @brief "http://Ama.Authentication.Service/":GetCertificate is a complexType.
///
/// @note class _ns3__GetCertificate operations:
/// - _ns3__GetCertificate* soap_new__ns3__GetCertificate(soap*) allocate and default initialize
/// - _ns3__GetCertificate* soap_new__ns3__GetCertificate(soap*, int num) allocate and default initialize an array
/// - _ns3__GetCertificate* soap_new_req__ns3__GetCertificate(soap*, ...) allocate, set required members
/// - _ns3__GetCertificate* soap_new_set__ns3__GetCertificate(soap*, ...) allocate, set all public members
/// - _ns3__GetCertificate::soap_default(soap*) default initialize members
/// - int soap_read__ns3__GetCertificate(soap*, _ns3__GetCertificate*) deserialize from a stream
/// - int soap_write__ns3__GetCertificate(soap*, _ns3__GetCertificate*) serialize to a stream
/// - _ns3__GetCertificate* _ns3__GetCertificate::soap_dup(soap*) returns deep copy of _ns3__GetCertificate, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _ns3__GetCertificate::soap_del() deep deletes _ns3__GetCertificate data members, use only after _ns3__GetCertificate::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _ns3__GetCertificate::soap_type() returns SOAP_TYPE__ns3__GetCertificate or derived type identifier
class _ns3__GetCertificate
{ public:
/// Element "applicationId" of type xs:base64Binary.
    xsd__base64Binary*                   applicationId                  0;	///< Optional element.
/// Element "userId" of type xs:string.
    std::string*                         userId                         0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://Ama.Authentication.Service/":GetCertificateResponse
/// @brief "http://Ama.Authentication.Service/":GetCertificateResponse is a complexType.
///
/// @note class _ns3__GetCertificateResponse operations:
/// - _ns3__GetCertificateResponse* soap_new__ns3__GetCertificateResponse(soap*) allocate and default initialize
/// - _ns3__GetCertificateResponse* soap_new__ns3__GetCertificateResponse(soap*, int num) allocate and default initialize an array
/// - _ns3__GetCertificateResponse* soap_new_req__ns3__GetCertificateResponse(soap*, ...) allocate, set required members
/// - _ns3__GetCertificateResponse* soap_new_set__ns3__GetCertificateResponse(soap*, ...) allocate, set all public members
/// - _ns3__GetCertificateResponse::soap_default(soap*) default initialize members
/// - int soap_read__ns3__GetCertificateResponse(soap*, _ns3__GetCertificateResponse*) deserialize from a stream
/// - int soap_write__ns3__GetCertificateResponse(soap*, _ns3__GetCertificateResponse*) serialize to a stream
/// - _ns3__GetCertificateResponse* _ns3__GetCertificateResponse::soap_dup(soap*) returns deep copy of _ns3__GetCertificateResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _ns3__GetCertificateResponse::soap_del() deep deletes _ns3__GetCertificateResponse data members, use only after _ns3__GetCertificateResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _ns3__GetCertificateResponse::soap_type() returns SOAP_TYPE__ns3__GetCertificateResponse or derived type identifier
class _ns3__GetCertificateResponse
{ public:
/// Element "GetCertificateResult" of type xs:string.
    std::string*                         GetCertificateResult           0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://Ama.Authentication.Service/":ValidateOtp
/// @brief "http://Ama.Authentication.Service/":ValidateOtp is a complexType.
///
/// @note class _ns3__ValidateOtp operations:
/// - _ns3__ValidateOtp* soap_new__ns3__ValidateOtp(soap*) allocate and default initialize
/// - _ns3__ValidateOtp* soap_new__ns3__ValidateOtp(soap*, int num) allocate and default initialize an array
/// - _ns3__ValidateOtp* soap_new_req__ns3__ValidateOtp(soap*, ...) allocate, set required members
/// - _ns3__ValidateOtp* soap_new_set__ns3__ValidateOtp(soap*, ...) allocate, set all public members
/// - _ns3__ValidateOtp::soap_default(soap*) default initialize members
/// - int soap_read__ns3__ValidateOtp(soap*, _ns3__ValidateOtp*) deserialize from a stream
/// - int soap_write__ns3__ValidateOtp(soap*, _ns3__ValidateOtp*) serialize to a stream
/// - _ns3__ValidateOtp* _ns3__ValidateOtp::soap_dup(soap*) returns deep copy of _ns3__ValidateOtp, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _ns3__ValidateOtp::soap_del() deep deletes _ns3__ValidateOtp data members, use only after _ns3__ValidateOtp::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _ns3__ValidateOtp::soap_type() returns SOAP_TYPE__ns3__ValidateOtp or derived type identifier
class _ns3__ValidateOtp
{ public:
/// Element "code" of type xs:string.
    std::string*                         code                           0;	///< Optional element.
/// Element "processId" of type xs:string.
    std::string*                         processId                      0;	///< Optional element.
/// Element "applicationId" of type xs:base64Binary.
    xsd__base64Binary*                   applicationId                  0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://Ama.Authentication.Service/":ValidateOtpResponse
/// @brief "http://Ama.Authentication.Service/":ValidateOtpResponse is a complexType.
///
/// @note class _ns3__ValidateOtpResponse operations:
/// - _ns3__ValidateOtpResponse* soap_new__ns3__ValidateOtpResponse(soap*) allocate and default initialize
/// - _ns3__ValidateOtpResponse* soap_new__ns3__ValidateOtpResponse(soap*, int num) allocate and default initialize an array
/// - _ns3__ValidateOtpResponse* soap_new_req__ns3__ValidateOtpResponse(soap*, ...) allocate, set required members
/// - _ns3__ValidateOtpResponse* soap_new_set__ns3__ValidateOtpResponse(soap*, ...) allocate, set all public members
/// - _ns3__ValidateOtpResponse::soap_default(soap*) default initialize members
/// - int soap_read__ns3__ValidateOtpResponse(soap*, _ns3__ValidateOtpResponse*) deserialize from a stream
/// - int soap_write__ns3__ValidateOtpResponse(soap*, _ns3__ValidateOtpResponse*) serialize to a stream
/// - _ns3__ValidateOtpResponse* _ns3__ValidateOtpResponse::soap_dup(soap*) returns deep copy of _ns3__ValidateOtpResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _ns3__ValidateOtpResponse::soap_del() deep deletes _ns3__ValidateOtpResponse data members, use only after _ns3__ValidateOtpResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _ns3__ValidateOtpResponse::soap_type() returns SOAP_TYPE__ns3__ValidateOtpResponse or derived type identifier
class _ns3__ValidateOtpResponse
{ public:
/// Element "ValidateOtpResult" of type "http://schemas.datacontract.org/2004/07/Ama.Structures.CCMovelSignature":SignResponse.
    ns5__SignResponse*                   ValidateOtpResult              0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://Ama.Authentication.Service/":CCMovelMultipleSign
/// @brief "http://Ama.Authentication.Service/":CCMovelMultipleSign is a complexType.
///
/// @note class _ns3__CCMovelMultipleSign operations:
/// - _ns3__CCMovelMultipleSign* soap_new__ns3__CCMovelMultipleSign(soap*) allocate and default initialize
/// - _ns3__CCMovelMultipleSign* soap_new__ns3__CCMovelMultipleSign(soap*, int num) allocate and default initialize an array
/// - _ns3__CCMovelMultipleSign* soap_new_req__ns3__CCMovelMultipleSign(soap*, ...) allocate, set required members
/// - _ns3__CCMovelMultipleSign* soap_new_set__ns3__CCMovelMultipleSign(soap*, ...) allocate, set all public members
/// - _ns3__CCMovelMultipleSign::soap_default(soap*) default initialize members
/// - int soap_read__ns3__CCMovelMultipleSign(soap*, _ns3__CCMovelMultipleSign*) deserialize from a stream
/// - int soap_write__ns3__CCMovelMultipleSign(soap*, _ns3__CCMovelMultipleSign*) serialize to a stream
/// - _ns3__CCMovelMultipleSign* _ns3__CCMovelMultipleSign::soap_dup(soap*) returns deep copy of _ns3__CCMovelMultipleSign, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _ns3__CCMovelMultipleSign::soap_del() deep deletes _ns3__CCMovelMultipleSign data members, use only after _ns3__CCMovelMultipleSign::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _ns3__CCMovelMultipleSign::soap_type() returns SOAP_TYPE__ns3__CCMovelMultipleSign or derived type identifier
class _ns3__CCMovelMultipleSign
{ public:
/// Element "request" of type "http://schemas.datacontract.org/2004/07/Ama.Structures.CCMovelSignature":MultipleSignRequest.
    ns5__MultipleSignRequest*            request                        0;	///< Optional element.
/// Element "documents" of type "http://schemas.datacontract.org/2004/07/Ama.Structures.CCMovelSignature":ArrayOfHashStructure.
    ns5__ArrayOfHashStructure*           documents                      0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://Ama.Authentication.Service/":CCMovelMultipleSignResponse
/// @brief "http://Ama.Authentication.Service/":CCMovelMultipleSignResponse is a complexType.
///
/// @note class _ns3__CCMovelMultipleSignResponse operations:
/// - _ns3__CCMovelMultipleSignResponse* soap_new__ns3__CCMovelMultipleSignResponse(soap*) allocate and default initialize
/// - _ns3__CCMovelMultipleSignResponse* soap_new__ns3__CCMovelMultipleSignResponse(soap*, int num) allocate and default initialize an array
/// - _ns3__CCMovelMultipleSignResponse* soap_new_req__ns3__CCMovelMultipleSignResponse(soap*, ...) allocate, set required members
/// - _ns3__CCMovelMultipleSignResponse* soap_new_set__ns3__CCMovelMultipleSignResponse(soap*, ...) allocate, set all public members
/// - _ns3__CCMovelMultipleSignResponse::soap_default(soap*) default initialize members
/// - int soap_read__ns3__CCMovelMultipleSignResponse(soap*, _ns3__CCMovelMultipleSignResponse*) deserialize from a stream
/// - int soap_write__ns3__CCMovelMultipleSignResponse(soap*, _ns3__CCMovelMultipleSignResponse*) serialize to a stream
/// - _ns3__CCMovelMultipleSignResponse* _ns3__CCMovelMultipleSignResponse::soap_dup(soap*) returns deep copy of _ns3__CCMovelMultipleSignResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _ns3__CCMovelMultipleSignResponse::soap_del() deep deletes _ns3__CCMovelMultipleSignResponse data members, use only after _ns3__CCMovelMultipleSignResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _ns3__CCMovelMultipleSignResponse::soap_type() returns SOAP_TYPE__ns3__CCMovelMultipleSignResponse or derived type identifier
class _ns3__CCMovelMultipleSignResponse
{ public:
/// Element "CCMovelMultipleSignResult" of type "http://schemas.datacontract.org/2004/07/Ama.Structures.CCMovelSignature":SignStatus.
    ns5__SignStatus*                     CCMovelMultipleSignResult      0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://Ama.Authentication.Service/":ForceSMS
/// @brief "http://Ama.Authentication.Service/":ForceSMS is a complexType.
///
/// @note class _ns3__ForceSMS operations:
/// - _ns3__ForceSMS* soap_new__ns3__ForceSMS(soap*) allocate and default initialize
/// - _ns3__ForceSMS* soap_new__ns3__ForceSMS(soap*, int num) allocate and default initialize an array
/// - _ns3__ForceSMS* soap_new_req__ns3__ForceSMS(soap*, ...) allocate, set required members
/// - _ns3__ForceSMS* soap_new_set__ns3__ForceSMS(soap*, ...) allocate, set all public members
/// - _ns3__ForceSMS::soap_default(soap*) default initialize members
/// - int soap_read__ns3__ForceSMS(soap*, _ns3__ForceSMS*) deserialize from a stream
/// - int soap_write__ns3__ForceSMS(soap*, _ns3__ForceSMS*) serialize to a stream
/// - _ns3__ForceSMS* _ns3__ForceSMS::soap_dup(soap*) returns deep copy of _ns3__ForceSMS, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _ns3__ForceSMS::soap_del() deep deletes _ns3__ForceSMS data members, use only after _ns3__ForceSMS::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _ns3__ForceSMS::soap_type() returns SOAP_TYPE__ns3__ForceSMS or derived type identifier
class _ns3__ForceSMS
{ public:
/// Element "processId" of type xs:string.
    std::string*                         processId                      0;	///< Optional element.
/// Element "citizenId" of type xs:string.
    std::string*                         citizenId                      0;	///< Optional element.
/// Element "applicationId" of type xs:base64Binary.
    xsd__base64Binary*                   applicationId                  0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://Ama.Authentication.Service/":ForceSMSResponse
/// @brief "http://Ama.Authentication.Service/":ForceSMSResponse is a complexType.
///
/// @note class _ns3__ForceSMSResponse operations:
/// - _ns3__ForceSMSResponse* soap_new__ns3__ForceSMSResponse(soap*) allocate and default initialize
/// - _ns3__ForceSMSResponse* soap_new__ns3__ForceSMSResponse(soap*, int num) allocate and default initialize an array
/// - _ns3__ForceSMSResponse* soap_new_req__ns3__ForceSMSResponse(soap*, ...) allocate, set required members
/// - _ns3__ForceSMSResponse* soap_new_set__ns3__ForceSMSResponse(soap*, ...) allocate, set all public members
/// - _ns3__ForceSMSResponse::soap_default(soap*) default initialize members
/// - int soap_read__ns3__ForceSMSResponse(soap*, _ns3__ForceSMSResponse*) deserialize from a stream
/// - int soap_write__ns3__ForceSMSResponse(soap*, _ns3__ForceSMSResponse*) serialize to a stream
/// - _ns3__ForceSMSResponse* _ns3__ForceSMSResponse::soap_dup(soap*) returns deep copy of _ns3__ForceSMSResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _ns3__ForceSMSResponse::soap_del() deep deletes _ns3__ForceSMSResponse data members, use only after _ns3__ForceSMSResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _ns3__ForceSMSResponse::soap_type() returns SOAP_TYPE__ns3__ForceSMSResponse or derived type identifier
class _ns3__ForceSMSResponse
{ public:
/// Element "ForceSMSResult" of type "http://schemas.datacontract.org/2004/07/Ama.Structures.CCMovelSignature":SignStatus.
    ns5__SignStatus*                     ForceSMSResult                 0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://Ama.Authentication.Service/":GetCertificateWithPin
/// @brief "http://Ama.Authentication.Service/":GetCertificateWithPin is a complexType.
///
/// @note class _ns3__GetCertificateWithPin operations:
/// - _ns3__GetCertificateWithPin* soap_new__ns3__GetCertificateWithPin(soap*) allocate and default initialize
/// - _ns3__GetCertificateWithPin* soap_new__ns3__GetCertificateWithPin(soap*, int num) allocate and default initialize an array
/// - _ns3__GetCertificateWithPin* soap_new_req__ns3__GetCertificateWithPin(soap*, ...) allocate, set required members
/// - _ns3__GetCertificateWithPin* soap_new_set__ns3__GetCertificateWithPin(soap*, ...) allocate, set all public members
/// - _ns3__GetCertificateWithPin::soap_default(soap*) default initialize members
/// - int soap_read__ns3__GetCertificateWithPin(soap*, _ns3__GetCertificateWithPin*) deserialize from a stream
/// - int soap_write__ns3__GetCertificateWithPin(soap*, _ns3__GetCertificateWithPin*) serialize to a stream
/// - _ns3__GetCertificateWithPin* _ns3__GetCertificateWithPin::soap_dup(soap*) returns deep copy of _ns3__GetCertificateWithPin, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _ns3__GetCertificateWithPin::soap_del() deep deletes _ns3__GetCertificateWithPin data members, use only after _ns3__GetCertificateWithPin::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _ns3__GetCertificateWithPin::soap_type() returns SOAP_TYPE__ns3__GetCertificateWithPin or derived type identifier
class _ns3__GetCertificateWithPin
{ public:
/// Element "applicationId" of type xs:base64Binary.
    xsd__base64Binary*                   applicationId                  0;	///< Optional element.
/// Element "userId" of type xs:string.
    std::string*                         userId                         0;	///< Optional element.
/// Element "signaturePin" of type xs:string.
    std::string*                         signaturePin                   0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://Ama.Authentication.Service/":GetCertificateWithPinResponse
/// @brief "http://Ama.Authentication.Service/":GetCertificateWithPinResponse is a complexType.
///
/// @note class _ns3__GetCertificateWithPinResponse operations:
/// - _ns3__GetCertificateWithPinResponse* soap_new__ns3__GetCertificateWithPinResponse(soap*) allocate and default initialize
/// - _ns3__GetCertificateWithPinResponse* soap_new__ns3__GetCertificateWithPinResponse(soap*, int num) allocate and default initialize an array
/// - _ns3__GetCertificateWithPinResponse* soap_new_req__ns3__GetCertificateWithPinResponse(soap*, ...) allocate, set required members
/// - _ns3__GetCertificateWithPinResponse* soap_new_set__ns3__GetCertificateWithPinResponse(soap*, ...) allocate, set all public members
/// - _ns3__GetCertificateWithPinResponse::soap_default(soap*) default initialize members
/// - int soap_read__ns3__GetCertificateWithPinResponse(soap*, _ns3__GetCertificateWithPinResponse*) deserialize from a stream
/// - int soap_write__ns3__GetCertificateWithPinResponse(soap*, _ns3__GetCertificateWithPinResponse*) serialize to a stream
/// - _ns3__GetCertificateWithPinResponse* _ns3__GetCertificateWithPinResponse::soap_dup(soap*) returns deep copy of _ns3__GetCertificateWithPinResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _ns3__GetCertificateWithPinResponse::soap_del() deep deletes _ns3__GetCertificateWithPinResponse data members, use only after _ns3__GetCertificateWithPinResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _ns3__GetCertificateWithPinResponse::soap_type() returns SOAP_TYPE__ns3__GetCertificateWithPinResponse or derived type identifier
class _ns3__GetCertificateWithPinResponse
{ public:
/// Element "GetCertificateWithPinResult" of type "http://schemas.datacontract.org/2004/07/Ama.Structures.CCMovelSignature":SignStatus.
    ns5__SignStatus*                     GetCertificateWithPinResult    0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://schemas.microsoft.com/2003/10/Serialization/                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://schemas.datacontract.org/2004/07/Ama.Structures.CCMovelSignature  *
 *                                                                            *
\******************************************************************************/

/// @brief "http://schemas.datacontract.org/2004/07/Ama.Structures.CCMovelSignature":SignRequest is a complexType.
///
/// @note class ns5__SignRequest operations:
/// - ns5__SignRequest* soap_new_ns5__SignRequest(soap*) allocate and default initialize
/// - ns5__SignRequest* soap_new_ns5__SignRequest(soap*, int num) allocate and default initialize an array
/// - ns5__SignRequest* soap_new_req_ns5__SignRequest(soap*, ...) allocate, set required members
/// - ns5__SignRequest* soap_new_set_ns5__SignRequest(soap*, ...) allocate, set all public members
/// - ns5__SignRequest::soap_default(soap*) default initialize members
/// - int soap_read_ns5__SignRequest(soap*, ns5__SignRequest*) deserialize from a stream
/// - int soap_write_ns5__SignRequest(soap*, ns5__SignRequest*) serialize to a stream
/// - ns5__SignRequest* ns5__SignRequest::soap_dup(soap*) returns deep copy of ns5__SignRequest, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - ns5__SignRequest::soap_del() deep deletes ns5__SignRequest data members, use only after ns5__SignRequest::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int ns5__SignRequest::soap_type() returns SOAP_TYPE_ns5__SignRequest or derived type identifier
class ns5__SignRequest : public xsd__anyType
{ public:
/// Element "ApplicationId" of type xs:base64Binary.
    xsd__base64Binary*                   ApplicationId                  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "DocName" of type xs:string.
    std::string*                         DocName                        0;	///< Optional element.
/// Element "Hash" of type xs:base64Binary.
    xsd__base64Binary*                   Hash                           nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "Pin" of type xs:string.
    std::string*                         Pin                            nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "UserId" of type xs:string.
    std::string*                         UserId                         nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
};

/// @brief "http://schemas.datacontract.org/2004/07/Ama.Structures.CCMovelSignature":SignStatus is a complexType.
///
/// @note class ns5__SignStatus operations:
/// - ns5__SignStatus* soap_new_ns5__SignStatus(soap*) allocate and default initialize
/// - ns5__SignStatus* soap_new_ns5__SignStatus(soap*, int num) allocate and default initialize an array
/// - ns5__SignStatus* soap_new_req_ns5__SignStatus(soap*, ...) allocate, set required members
/// - ns5__SignStatus* soap_new_set_ns5__SignStatus(soap*, ...) allocate, set all public members
/// - ns5__SignStatus::soap_default(soap*) default initialize members
/// - int soap_read_ns5__SignStatus(soap*, ns5__SignStatus*) deserialize from a stream
/// - int soap_write_ns5__SignStatus(soap*, ns5__SignStatus*) serialize to a stream
/// - ns5__SignStatus* ns5__SignStatus::soap_dup(soap*) returns deep copy of ns5__SignStatus, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - ns5__SignStatus::soap_del() deep deletes ns5__SignStatus data members, use only after ns5__SignStatus::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int ns5__SignStatus::soap_type() returns SOAP_TYPE_ns5__SignStatus or derived type identifier
class ns5__SignStatus : public xsd__anyType
{ public:
/// Element "Code" of type xs:string.
    std::string*                         Code                           nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "Field" of type xs:string.
    std::string*                         Field                          nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "FieldValue" of type xs:string.
    std::string*                         FieldValue                     nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "Message" of type xs:string.
    std::string*                         Message                        nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "ProcessId" of type xs:string.
    std::string*                         ProcessId                      nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
};

/// @brief "http://schemas.datacontract.org/2004/07/Ama.Structures.CCMovelSignature":SignResponse is a complexType.
///
/// @note class ns5__SignResponse operations:
/// - ns5__SignResponse* soap_new_ns5__SignResponse(soap*) allocate and default initialize
/// - ns5__SignResponse* soap_new_ns5__SignResponse(soap*, int num) allocate and default initialize an array
/// - ns5__SignResponse* soap_new_req_ns5__SignResponse(soap*, ...) allocate, set required members
/// - ns5__SignResponse* soap_new_set_ns5__SignResponse(soap*, ...) allocate, set all public members
/// - ns5__SignResponse::soap_default(soap*) default initialize members
/// - int soap_read_ns5__SignResponse(soap*, ns5__SignResponse*) deserialize from a stream
/// - int soap_write_ns5__SignResponse(soap*, ns5__SignResponse*) serialize to a stream
/// - ns5__SignResponse* ns5__SignResponse::soap_dup(soap*) returns deep copy of ns5__SignResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - ns5__SignResponse::soap_del() deep deletes ns5__SignResponse data members, use only after ns5__SignResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int ns5__SignResponse::soap_type() returns SOAP_TYPE_ns5__SignResponse or derived type identifier
class ns5__SignResponse : public xsd__anyType
{ public:
/// Element "ArrayOfHashStructure" of type "http://schemas.datacontract.org/2004/07/Ama.Structures.CCMovelSignature":ArrayOfHashStructure.
    ns5__ArrayOfHashStructure*           ArrayOfHashStructure           nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "Signature" of type xs:base64Binary.
    xsd__base64Binary*                   Signature                      nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "Status" of type "http://schemas.datacontract.org/2004/07/Ama.Structures.CCMovelSignature":SignStatus.
    ns5__SignStatus*                     Status                         nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "certificate" of type xs:string.
    std::string*                         certificate                    nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
};

/// @brief "http://schemas.datacontract.org/2004/07/Ama.Structures.CCMovelSignature":ArrayOfHashStructure is a complexType.
///
/// @note class ns5__ArrayOfHashStructure operations:
/// - ns5__ArrayOfHashStructure* soap_new_ns5__ArrayOfHashStructure(soap*) allocate and default initialize
/// - ns5__ArrayOfHashStructure* soap_new_ns5__ArrayOfHashStructure(soap*, int num) allocate and default initialize an array
/// - ns5__ArrayOfHashStructure* soap_new_req_ns5__ArrayOfHashStructure(soap*, ...) allocate, set required members
/// - ns5__ArrayOfHashStructure* soap_new_set_ns5__ArrayOfHashStructure(soap*, ...) allocate, set all public members
/// - ns5__ArrayOfHashStructure::soap_default(soap*) default initialize members
/// - int soap_read_ns5__ArrayOfHashStructure(soap*, ns5__ArrayOfHashStructure*) deserialize from a stream
/// - int soap_write_ns5__ArrayOfHashStructure(soap*, ns5__ArrayOfHashStructure*) serialize to a stream
/// - ns5__ArrayOfHashStructure* ns5__ArrayOfHashStructure::soap_dup(soap*) returns deep copy of ns5__ArrayOfHashStructure, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - ns5__ArrayOfHashStructure::soap_del() deep deletes ns5__ArrayOfHashStructure data members, use only after ns5__ArrayOfHashStructure::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int ns5__ArrayOfHashStructure::soap_type() returns SOAP_TYPE_ns5__ArrayOfHashStructure or derived type identifier
class ns5__ArrayOfHashStructure : public xsd__anyType
{ public:
/// Vector of ns5__HashStructure* of length 0..unbounded.
    std::vector<ns5__HashStructure*    > HashStructure                  0;	///< Multiple elements.
};

/// @brief "http://schemas.datacontract.org/2004/07/Ama.Structures.CCMovelSignature":HashStructure is a complexType.
///
/// @note class ns5__HashStructure operations:
/// - ns5__HashStructure* soap_new_ns5__HashStructure(soap*) allocate and default initialize
/// - ns5__HashStructure* soap_new_ns5__HashStructure(soap*, int num) allocate and default initialize an array
/// - ns5__HashStructure* soap_new_req_ns5__HashStructure(soap*, ...) allocate, set required members
/// - ns5__HashStructure* soap_new_set_ns5__HashStructure(soap*, ...) allocate, set all public members
/// - ns5__HashStructure::soap_default(soap*) default initialize members
/// - int soap_read_ns5__HashStructure(soap*, ns5__HashStructure*) deserialize from a stream
/// - int soap_write_ns5__HashStructure(soap*, ns5__HashStructure*) serialize to a stream
/// - ns5__HashStructure* ns5__HashStructure::soap_dup(soap*) returns deep copy of ns5__HashStructure, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - ns5__HashStructure::soap_del() deep deletes ns5__HashStructure data members, use only after ns5__HashStructure::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int ns5__HashStructure::soap_type() returns SOAP_TYPE_ns5__HashStructure or derived type identifier
class ns5__HashStructure : public xsd__anyType
{ public:
/// Element "Hash" of type xs:base64Binary.
    xsd__base64Binary*                   Hash                           nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "Name" of type xs:string.
    std::string*                         Name                           nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "id" of type xs:string.
    std::string*                         id                             nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
};

/// @brief "http://schemas.datacontract.org/2004/07/Ama.Structures.CCMovelSignature":MultipleSignRequest is a complexType.
///
/// @note class ns5__MultipleSignRequest operations:
/// - ns5__MultipleSignRequest* soap_new_ns5__MultipleSignRequest(soap*) allocate and default initialize
/// - ns5__MultipleSignRequest* soap_new_ns5__MultipleSignRequest(soap*, int num) allocate and default initialize an array
/// - ns5__MultipleSignRequest* soap_new_req_ns5__MultipleSignRequest(soap*, ...) allocate, set required members
/// - ns5__MultipleSignRequest* soap_new_set_ns5__MultipleSignRequest(soap*, ...) allocate, set all public members
/// - ns5__MultipleSignRequest::soap_default(soap*) default initialize members
/// - int soap_read_ns5__MultipleSignRequest(soap*, ns5__MultipleSignRequest*) deserialize from a stream
/// - int soap_write_ns5__MultipleSignRequest(soap*, ns5__MultipleSignRequest*) serialize to a stream
/// - ns5__MultipleSignRequest* ns5__MultipleSignRequest::soap_dup(soap*) returns deep copy of ns5__MultipleSignRequest, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - ns5__MultipleSignRequest::soap_del() deep deletes ns5__MultipleSignRequest data members, use only after ns5__MultipleSignRequest::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int ns5__MultipleSignRequest::soap_type() returns SOAP_TYPE_ns5__MultipleSignRequest or derived type identifier
class ns5__MultipleSignRequest : public xsd__anyType
{ public:
/// Element "ApplicationId" of type xs:base64Binary.
    xsd__base64Binary*                   ApplicationId                  nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "Pin" of type xs:string.
    std::string*                         Pin                            nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// Element "UserId" of type xs:string.
    std::string*                         UserId                         nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
};


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://Ama.Authentication.Service/Imports                                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://Ama.Authentication.Service/Imports                                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://Ama.Authentication.Service/                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://Ama.Authentication.Service/                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://schemas.microsoft.com/2003/10/Serialization/                      *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":anyType of type xs:anyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":anyURI of type xs:anyURI.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":base64Binary of type xs:base64Binary.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":boolean of type xs:boolean.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":byte of type xs:byte.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":dateTime of type xs:dateTime.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":decimal of type xs:decimal.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":double of type xs:double.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":float of type xs:float.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":int of type xs:int.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":long of type xs:long.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":QName of type xs:QName.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":short of type xs:short.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":string of type xs:string.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":unsignedByte of type xs:unsignedByte.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":unsignedInt of type xs:unsignedInt.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":unsignedLong of type xs:unsignedLong.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":unsignedShort of type xs:unsignedShort.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":char of type "http://schemas.microsoft.com/2003/10/Serialization/":char.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":duration of type "http://schemas.microsoft.com/2003/10/Serialization/":duration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":guid of type "http://schemas.microsoft.com/2003/10/Serialization/":guid.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://schemas.microsoft.com/2003/10/Serialization/                      *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level attribute "http://schemas.microsoft.com/2003/10/Serialization/":FactoryType of simpleType xs:QName.
/// @note Use wsdl2h option -g to auto-generate a top-level attribute declaration.

/// @brief Top-level attribute "http://schemas.microsoft.com/2003/10/Serialization/":Id of simpleType xs:ID.
/// @note Use wsdl2h option -g to auto-generate a top-level attribute declaration.

/// @brief Top-level attribute "http://schemas.microsoft.com/2003/10/Serialization/":Ref of simpleType xs:IDREF.
/// @note Use wsdl2h option -g to auto-generate a top-level attribute declaration.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://schemas.datacontract.org/2004/07/Ama.Structures.CCMovelSignature  *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://schemas.datacontract.org/2004/07/Ama.Structures.CCMovelSignature":SignRequest of type "http://schemas.datacontract.org/2004/07/Ama.Structures.CCMovelSignature":SignRequest.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.datacontract.org/2004/07/Ama.Structures.CCMovelSignature":SignStatus of type "http://schemas.datacontract.org/2004/07/Ama.Structures.CCMovelSignature":SignStatus.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.datacontract.org/2004/07/Ama.Structures.CCMovelSignature":SignResponse of type "http://schemas.datacontract.org/2004/07/Ama.Structures.CCMovelSignature":SignResponse.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.datacontract.org/2004/07/Ama.Structures.CCMovelSignature":ArrayOfHashStructure of type "http://schemas.datacontract.org/2004/07/Ama.Structures.CCMovelSignature":ArrayOfHashStructure.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.datacontract.org/2004/07/Ama.Structures.CCMovelSignature":HashStructure of type "http://schemas.datacontract.org/2004/07/Ama.Structures.CCMovelSignature":HashStructure.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.datacontract.org/2004/07/Ama.Structures.CCMovelSignature":MultipleSignRequest of type "http://schemas.datacontract.org/2004/07/Ama.Structures.CCMovelSignature":MultipleSignRequest.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://schemas.datacontract.org/2004/07/Ama.Structures.CCMovelSignature  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/

// This service supports SOAP 1.2 namespaces:
#import "soap12.h"

//gsoap ns1  service name:	BasicHttpBinding_USCORECCMovelSignature 
//gsoap ns1  service type:	CCMovelSignature 
//gsoap ns1  service port:	CCMovelDigitalSignature1.wsdl 
//gsoap ns1  service namespace:	http://tempuri.org/ 
//gsoap ns1  service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage CCMovelDigitalSignature Definitions

@section CCMovelDigitalSignature_bindings Service Bindings

  - @ref BasicHttpBinding_USCORECCMovelSignature

@section CCMovelDigitalSignature_more More Information

  - @ref page_notes "Notes"

  - @ref page_XMLDataBinding "XML Data Binding"

  - @ref SOAP_ENV__Header "SOAP Header Content" (when applicable)

  - @ref SOAP_ENV__Detail "SOAP Fault Detail Content" (when applicable)


*/

/** @page BasicHttpBinding_USCORECCMovelSignature Binding "BasicHttpBinding_USCORECCMovelSignature"

@section BasicHttpBinding_USCORECCMovelSignature_operations Operations of Binding "BasicHttpBinding_USCORECCMovelSignature"

  - @ref __ns1__CCMovelSign

  - @ref __ns1__GetCertificate

  - @ref __ns1__ValidateOtp

  - @ref __ns1__CCMovelMultipleSign

  - @ref __ns1__ForceSMS

  - @ref __ns1__GetCertificateWithPin

@section BasicHttpBinding_USCORECCMovelSignature_ports Default endpoints of Binding "BasicHttpBinding_USCORECCMovelSignature"

  - CCMovelDigitalSignature1.wsdl

@section BasicHttpBinding_USCORECCMovelSignature_policy Policy of Binding "BasicHttpBinding_USCORECCMovelSignature"

See Section @ref BasicHttpBinding_USCORECCMovelSignature_policy_enablers

  - WS-Policy applicable to the service endpoint ports:
	- Exactly one of the following:
		- All of the following:
			- [7.3] Transport Binding requirements:
				- [7.1] Security Binding Algorithm Suite requirements:
					- Basic256
				- [7.2] WS-Security Header Layout requirements:
					- WS-Security headers 'declare before use' required (gSOAP default)
				- Transport requirements:
					- [5.4.10] HTTPS required:

@note Use wsdl2h option -Nname to change the service binding prefix name


*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   BasicHttpBinding_USCORECCMovelSignature                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__CCMovelSign                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__CCMovelSign" of service binding "BasicHttpBinding_USCORECCMovelSignature".

  - SOAP document/literal style messaging

  - Default endpoints:
    - CCMovelDigitalSignature1.wsdl

  - Default SOAP action or REST location path:
    - "http://Ama.Authentication.Service/CCMovelSignature/CCMovelSign"

  - Addressing input action: "http://Ama.Authentication.Service/CCMovelSignature/CCMovelSign"

  - Addressing output action: "http://Ama.Authentication.Service/CCMovelSignature/CCMovelSignResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__CCMovelSign(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns3__CCMovelSign*                  ns3__CCMovelSign,
    // output parameters:
    _ns3__CCMovelSignResponse          &ns3__CCMovelSignResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__CCMovelSign(
    struct soap *soap,
    // input parameters:
    _ns3__CCMovelSign*                  ns3__CCMovelSign,
    // output parameters:
    _ns3__CCMovelSignResponse          &ns3__CCMovelSignResponse
  );
@endcode

C++ proxy class (defined in soapBasicHttpBinding_USCORECCMovelSignatureProxy.h generated with soapcpp2):
@code
  class BasicHttpBinding_USCORECCMovelSignatureProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapBasicHttpBinding_USCORECCMovelSignatureService.h generated with soapcpp2):
@code
  class BasicHttpBinding_USCORECCMovelSignatureService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	CCMovelSign SOAP
//gsoap ns1  service method-style:	CCMovelSign document
//gsoap ns1  service method-encoding:	CCMovelSign literal
//gsoap ns1  service method-input-action:	CCMovelSign http://Ama.Authentication.Service/CCMovelSignature/CCMovelSign
//gsoap ns1  service method-output-action:	CCMovelSign http://Ama.Authentication.Service/CCMovelSignature/CCMovelSignResponse
int __ns1__CCMovelSign(
    _ns3__CCMovelSign*                  ns3__CCMovelSign,	///< Input parameter
    _ns3__CCMovelSignResponse          &ns3__CCMovelSignResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetCertificate                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__GetCertificate" of service binding "BasicHttpBinding_USCORECCMovelSignature".

  - SOAP document/literal style messaging

  - Default endpoints:
    - CCMovelDigitalSignature1.wsdl

  - Default SOAP action or REST location path:
    - "http://Ama.Authentication.Service/CCMovelSignature/GetCertificate"

  - Addressing input action: "http://Ama.Authentication.Service/CCMovelSignature/GetCertificate"

  - Addressing output action: "http://Ama.Authentication.Service/CCMovelSignature/GetCertificateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetCertificate(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns3__GetCertificate*               ns3__GetCertificate,
    // output parameters:
    _ns3__GetCertificateResponse       &ns3__GetCertificateResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetCertificate(
    struct soap *soap,
    // input parameters:
    _ns3__GetCertificate*               ns3__GetCertificate,
    // output parameters:
    _ns3__GetCertificateResponse       &ns3__GetCertificateResponse
  );
@endcode

C++ proxy class (defined in soapBasicHttpBinding_USCORECCMovelSignatureProxy.h generated with soapcpp2):
@code
  class BasicHttpBinding_USCORECCMovelSignatureProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapBasicHttpBinding_USCORECCMovelSignatureService.h generated with soapcpp2):
@code
  class BasicHttpBinding_USCORECCMovelSignatureService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetCertificate SOAP
//gsoap ns1  service method-style:	GetCertificate document
//gsoap ns1  service method-encoding:	GetCertificate literal
//gsoap ns1  service method-input-action:	GetCertificate http://Ama.Authentication.Service/CCMovelSignature/GetCertificate
//gsoap ns1  service method-output-action:	GetCertificate http://Ama.Authentication.Service/CCMovelSignature/GetCertificateResponse
int __ns1__GetCertificate(
    _ns3__GetCertificate*               ns3__GetCertificate,	///< Input parameter
    _ns3__GetCertificateResponse       &ns3__GetCertificateResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__ValidateOtp                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__ValidateOtp" of service binding "BasicHttpBinding_USCORECCMovelSignature".

  - SOAP document/literal style messaging

  - Default endpoints:
    - CCMovelDigitalSignature1.wsdl

  - Default SOAP action or REST location path:
    - "http://Ama.Authentication.Service/CCMovelSignature/ValidateOtp"

  - Addressing input action: "http://Ama.Authentication.Service/CCMovelSignature/ValidateOtp"

  - Addressing output action: "http://Ama.Authentication.Service/CCMovelSignature/ValidateOtpResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__ValidateOtp(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns3__ValidateOtp*                  ns3__ValidateOtp,
    // output parameters:
    _ns3__ValidateOtpResponse          &ns3__ValidateOtpResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__ValidateOtp(
    struct soap *soap,
    // input parameters:
    _ns3__ValidateOtp*                  ns3__ValidateOtp,
    // output parameters:
    _ns3__ValidateOtpResponse          &ns3__ValidateOtpResponse
  );
@endcode

C++ proxy class (defined in soapBasicHttpBinding_USCORECCMovelSignatureProxy.h generated with soapcpp2):
@code
  class BasicHttpBinding_USCORECCMovelSignatureProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapBasicHttpBinding_USCORECCMovelSignatureService.h generated with soapcpp2):
@code
  class BasicHttpBinding_USCORECCMovelSignatureService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	ValidateOtp SOAP
//gsoap ns1  service method-style:	ValidateOtp document
//gsoap ns1  service method-encoding:	ValidateOtp literal
//gsoap ns1  service method-input-action:	ValidateOtp http://Ama.Authentication.Service/CCMovelSignature/ValidateOtp
//gsoap ns1  service method-output-action:	ValidateOtp http://Ama.Authentication.Service/CCMovelSignature/ValidateOtpResponse
int __ns1__ValidateOtp(
    _ns3__ValidateOtp*                  ns3__ValidateOtp,	///< Input parameter
    _ns3__ValidateOtpResponse          &ns3__ValidateOtpResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__CCMovelMultipleSign                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__CCMovelMultipleSign" of service binding "BasicHttpBinding_USCORECCMovelSignature".

  - SOAP document/literal style messaging

  - Default endpoints:
    - CCMovelDigitalSignature1.wsdl

  - Default SOAP action or REST location path:
    - "http://Ama.Authentication.Service/CCMovelSignature/CCMovelMultipleSign"

  - Addressing input action: "http://Ama.Authentication.Service/CCMovelSignature/CCMovelMultipleSign"

  - Addressing output action: "http://Ama.Authentication.Service/CCMovelSignature/CCMovelMultipleSignResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__CCMovelMultipleSign(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns3__CCMovelMultipleSign*          ns3__CCMovelMultipleSign,
    // output parameters:
    _ns3__CCMovelMultipleSignResponse  &ns3__CCMovelMultipleSignResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__CCMovelMultipleSign(
    struct soap *soap,
    // input parameters:
    _ns3__CCMovelMultipleSign*          ns3__CCMovelMultipleSign,
    // output parameters:
    _ns3__CCMovelMultipleSignResponse  &ns3__CCMovelMultipleSignResponse
  );
@endcode

C++ proxy class (defined in soapBasicHttpBinding_USCORECCMovelSignatureProxy.h generated with soapcpp2):
@code
  class BasicHttpBinding_USCORECCMovelSignatureProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapBasicHttpBinding_USCORECCMovelSignatureService.h generated with soapcpp2):
@code
  class BasicHttpBinding_USCORECCMovelSignatureService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	CCMovelMultipleSign SOAP
//gsoap ns1  service method-style:	CCMovelMultipleSign document
//gsoap ns1  service method-encoding:	CCMovelMultipleSign literal
//gsoap ns1  service method-input-action:	CCMovelMultipleSign http://Ama.Authentication.Service/CCMovelSignature/CCMovelMultipleSign
//gsoap ns1  service method-output-action:	CCMovelMultipleSign http://Ama.Authentication.Service/CCMovelSignature/CCMovelMultipleSignResponse
int __ns1__CCMovelMultipleSign(
    _ns3__CCMovelMultipleSign*          ns3__CCMovelMultipleSign,	///< Input parameter
    _ns3__CCMovelMultipleSignResponse  &ns3__CCMovelMultipleSignResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__ForceSMS                                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__ForceSMS" of service binding "BasicHttpBinding_USCORECCMovelSignature".

  - SOAP document/literal style messaging

  - Default endpoints:
    - CCMovelDigitalSignature1.wsdl

  - Default SOAP action or REST location path:
    - "http://Ama.Authentication.Service/CCMovelSignature/ForceSMS"

  - Addressing input action: "http://Ama.Authentication.Service/CCMovelSignature/ForceSMS"

  - Addressing output action: "http://Ama.Authentication.Service/CCMovelSignature/ForceSMSResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__ForceSMS(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns3__ForceSMS*                     ns3__ForceSMS,
    // output parameters:
    _ns3__ForceSMSResponse             &ns3__ForceSMSResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__ForceSMS(
    struct soap *soap,
    // input parameters:
    _ns3__ForceSMS*                     ns3__ForceSMS,
    // output parameters:
    _ns3__ForceSMSResponse             &ns3__ForceSMSResponse
  );
@endcode

C++ proxy class (defined in soapBasicHttpBinding_USCORECCMovelSignatureProxy.h generated with soapcpp2):
@code
  class BasicHttpBinding_USCORECCMovelSignatureProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapBasicHttpBinding_USCORECCMovelSignatureService.h generated with soapcpp2):
@code
  class BasicHttpBinding_USCORECCMovelSignatureService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	ForceSMS SOAP
//gsoap ns1  service method-style:	ForceSMS document
//gsoap ns1  service method-encoding:	ForceSMS literal
//gsoap ns1  service method-input-action:	ForceSMS http://Ama.Authentication.Service/CCMovelSignature/ForceSMS
//gsoap ns1  service method-output-action:	ForceSMS http://Ama.Authentication.Service/CCMovelSignature/ForceSMSResponse
int __ns1__ForceSMS(
    _ns3__ForceSMS*                     ns3__ForceSMS,	///< Input parameter
    _ns3__ForceSMSResponse             &ns3__ForceSMSResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetCertificateWithPin                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__GetCertificateWithPin" of service binding "BasicHttpBinding_USCORECCMovelSignature".

  - SOAP document/literal style messaging

  - Default endpoints:
    - CCMovelDigitalSignature1.wsdl

  - Default SOAP action or REST location path:
    - "http://Ama.Authentication.Service/CCMovelSignature/GetCertificateWithPin"

  - Addressing input action: "http://Ama.Authentication.Service/CCMovelSignature/GetCertificateWithPin"

  - Addressing output action: "http://Ama.Authentication.Service/CCMovelSignature/GetCertificateWithPinResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetCertificateWithPin(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns3__GetCertificateWithPin*        ns3__GetCertificateWithPin,
    // output parameters:
    _ns3__GetCertificateWithPinResponse&ns3__GetCertificateWithPinResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetCertificateWithPin(
    struct soap *soap,
    // input parameters:
    _ns3__GetCertificateWithPin*        ns3__GetCertificateWithPin,
    // output parameters:
    _ns3__GetCertificateWithPinResponse&ns3__GetCertificateWithPinResponse
  );
@endcode

C++ proxy class (defined in soapBasicHttpBinding_USCORECCMovelSignatureProxy.h generated with soapcpp2):
@code
  class BasicHttpBinding_USCORECCMovelSignatureProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapBasicHttpBinding_USCORECCMovelSignatureService.h generated with soapcpp2):
@code
  class BasicHttpBinding_USCORECCMovelSignatureService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetCertificateWithPin SOAP
//gsoap ns1  service method-style:	GetCertificateWithPin document
//gsoap ns1  service method-encoding:	GetCertificateWithPin literal
//gsoap ns1  service method-input-action:	GetCertificateWithPin http://Ama.Authentication.Service/CCMovelSignature/GetCertificateWithPin
//gsoap ns1  service method-output-action:	GetCertificateWithPin http://Ama.Authentication.Service/CCMovelSignature/GetCertificateWithPinResponse
int __ns1__GetCertificateWithPin(
    _ns3__GetCertificateWithPin*        ns3__GetCertificateWithPin,	///< Input parameter
    _ns3__GetCertificateWithPinResponse&ns3__GetCertificateWithPinResponse	///< Output parameter
);

/** @page BasicHttpBinding_USCORECCMovelSignature Binding "BasicHttpBinding_USCORECCMovelSignature"

@section BasicHttpBinding_USCORECCMovelSignature_policy_enablers Policy Enablers of Binding "BasicHttpBinding_USCORECCMovelSignature"

Based on policies and protocol requirements, this service requires importing "wsse.h"

  - WS-Policy reminders and enablers (when applicable):
    - WS-Addressing 1.0 (2005/08, accepts 2004/08):
	@code
	#import "wsa5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-Addressing (2004/08):
	@code
	#import "wsa.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-ReliableMessaging 1.0:
	@code
	#import "wsrm5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-ReliableMessaging 1.1:
	@code
	#import "wsrm.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-Discovery 1.0:
	@code
	#import "wsrm5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsddapi.h" // See the user guide gsoap/doc/wsdd/html/index.html
	@endcode
    - WS-Discovery 1.1:
	@code
	#import "wsrm.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsddapi.h" // See the user guide gsoap/doc/wsdd/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.0 (accepts 1.1):
	@code
	#import "wsse.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.1 (accepts 1.0):
	@code
	#import "wsse11.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - HTTP Digest Authentication:
	@code
	#include "plugin/httpda.h"
	soap_register_plugin(soap, soap_http_da); // register the HTTP DA plugin in your code
	// See the user guide gsoap/doc/httpda/html/index.html
	@endcode
*/

#import "wsse.h"

/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/** @page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings that are contractually bound by WSDLs and
are auto-generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data
bindings are adopted from XML schemas as part of the WSDL types section or when
running wsdl2h on a set of schemas to produce non-SOAP-based XML data bindings.

@note The following readers and writers are C/C++ data type (de)serializers
auto-generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the
(de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in
your code to import these data type and function declarations. Only use the
soapcpp2-generated files in your project build. Do not include the wsdl2h-
generated .h file in your code.

@note Data can be read and deserialized from:
  - an int file descriptor, using soap->recvfd = fd
  - a socket, using soap->socket = (int)...
  - a C++ stream (istream, stringstream), using soap->is = (istream*)...
  - a C string, using soap->is = (const char*)...
  - any input, using the soap->frecv() callback

@note Data can be serialized and written to:
  - an int file descriptor, using soap->sendfd = (int)...
  - a socket, using soap->socket = (int)...
  - a C++ stream (ostream, stringstream), using soap->os = (ostream*)...
  - a C string, using soap->os = (const char**)...
  - any output, using the soap->fsend() callback

@note The following options are available for (de)serialization control:
  - soap->encodingStyle = NULL; to remove SOAP 1.1/1.2 encodingStyle
  - soap_set_mode(soap, SOAP_XML_TREE); XML without id-ref (no cycles!)
  - soap_set_mode(soap, SOAP_XML_GRAPH); XML with id-ref (including cycles)
  - soap_set_namespaces(soap, struct Namespace *nsmap); to set xmlns bindings


*/

/**

@section ns2 Top-level root elements of schema "http://Ama.Authentication.Service/Imports"

*/

/**

@section ns3 Top-level root elements of schema "http://Ama.Authentication.Service/"

  - <ns3:CCMovelSign> @ref _ns3__CCMovelSign
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns3__CCMovelSign(struct soap*, _ns3__CCMovelSign*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns3__CCMovelSign(struct soap*, _ns3__CCMovelSign*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns3__CCMovelSign(struct soap*, const char *URL, _ns3__CCMovelSign*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns3__CCMovelSign(struct soap*, const char *URL, _ns3__CCMovelSign*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns3__CCMovelSign(struct soap*, const char *URL, _ns3__CCMovelSign*);
    soap_POST_recv__ns3__CCMovelSign(struct soap*, _ns3__CCMovelSign*);
    @endcode

  - <ns3:CCMovelSignResponse> @ref _ns3__CCMovelSignResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns3__CCMovelSignResponse(struct soap*, _ns3__CCMovelSignResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns3__CCMovelSignResponse(struct soap*, _ns3__CCMovelSignResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns3__CCMovelSignResponse(struct soap*, const char *URL, _ns3__CCMovelSignResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns3__CCMovelSignResponse(struct soap*, const char *URL, _ns3__CCMovelSignResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns3__CCMovelSignResponse(struct soap*, const char *URL, _ns3__CCMovelSignResponse*);
    soap_POST_recv__ns3__CCMovelSignResponse(struct soap*, _ns3__CCMovelSignResponse*);
    @endcode

  - <ns3:GetCertificate> @ref _ns3__GetCertificate
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns3__GetCertificate(struct soap*, _ns3__GetCertificate*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns3__GetCertificate(struct soap*, _ns3__GetCertificate*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns3__GetCertificate(struct soap*, const char *URL, _ns3__GetCertificate*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns3__GetCertificate(struct soap*, const char *URL, _ns3__GetCertificate*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns3__GetCertificate(struct soap*, const char *URL, _ns3__GetCertificate*);
    soap_POST_recv__ns3__GetCertificate(struct soap*, _ns3__GetCertificate*);
    @endcode

  - <ns3:GetCertificateResponse> @ref _ns3__GetCertificateResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns3__GetCertificateResponse(struct soap*, _ns3__GetCertificateResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns3__GetCertificateResponse(struct soap*, _ns3__GetCertificateResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns3__GetCertificateResponse(struct soap*, const char *URL, _ns3__GetCertificateResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns3__GetCertificateResponse(struct soap*, const char *URL, _ns3__GetCertificateResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns3__GetCertificateResponse(struct soap*, const char *URL, _ns3__GetCertificateResponse*);
    soap_POST_recv__ns3__GetCertificateResponse(struct soap*, _ns3__GetCertificateResponse*);
    @endcode

  - <ns3:ValidateOtp> @ref _ns3__ValidateOtp
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns3__ValidateOtp(struct soap*, _ns3__ValidateOtp*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns3__ValidateOtp(struct soap*, _ns3__ValidateOtp*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns3__ValidateOtp(struct soap*, const char *URL, _ns3__ValidateOtp*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns3__ValidateOtp(struct soap*, const char *URL, _ns3__ValidateOtp*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns3__ValidateOtp(struct soap*, const char *URL, _ns3__ValidateOtp*);
    soap_POST_recv__ns3__ValidateOtp(struct soap*, _ns3__ValidateOtp*);
    @endcode

  - <ns3:ValidateOtpResponse> @ref _ns3__ValidateOtpResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns3__ValidateOtpResponse(struct soap*, _ns3__ValidateOtpResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns3__ValidateOtpResponse(struct soap*, _ns3__ValidateOtpResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns3__ValidateOtpResponse(struct soap*, const char *URL, _ns3__ValidateOtpResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns3__ValidateOtpResponse(struct soap*, const char *URL, _ns3__ValidateOtpResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns3__ValidateOtpResponse(struct soap*, const char *URL, _ns3__ValidateOtpResponse*);
    soap_POST_recv__ns3__ValidateOtpResponse(struct soap*, _ns3__ValidateOtpResponse*);
    @endcode

  - <ns3:CCMovelMultipleSign> @ref _ns3__CCMovelMultipleSign
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns3__CCMovelMultipleSign(struct soap*, _ns3__CCMovelMultipleSign*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns3__CCMovelMultipleSign(struct soap*, _ns3__CCMovelMultipleSign*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns3__CCMovelMultipleSign(struct soap*, const char *URL, _ns3__CCMovelMultipleSign*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns3__CCMovelMultipleSign(struct soap*, const char *URL, _ns3__CCMovelMultipleSign*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns3__CCMovelMultipleSign(struct soap*, const char *URL, _ns3__CCMovelMultipleSign*);
    soap_POST_recv__ns3__CCMovelMultipleSign(struct soap*, _ns3__CCMovelMultipleSign*);
    @endcode

  - <ns3:CCMovelMultipleSignResponse> @ref _ns3__CCMovelMultipleSignResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns3__CCMovelMultipleSignResponse(struct soap*, _ns3__CCMovelMultipleSignResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns3__CCMovelMultipleSignResponse(struct soap*, _ns3__CCMovelMultipleSignResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns3__CCMovelMultipleSignResponse(struct soap*, const char *URL, _ns3__CCMovelMultipleSignResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns3__CCMovelMultipleSignResponse(struct soap*, const char *URL, _ns3__CCMovelMultipleSignResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns3__CCMovelMultipleSignResponse(struct soap*, const char *URL, _ns3__CCMovelMultipleSignResponse*);
    soap_POST_recv__ns3__CCMovelMultipleSignResponse(struct soap*, _ns3__CCMovelMultipleSignResponse*);
    @endcode

  - <ns3:ForceSMS> @ref _ns3__ForceSMS
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns3__ForceSMS(struct soap*, _ns3__ForceSMS*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns3__ForceSMS(struct soap*, _ns3__ForceSMS*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns3__ForceSMS(struct soap*, const char *URL, _ns3__ForceSMS*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns3__ForceSMS(struct soap*, const char *URL, _ns3__ForceSMS*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns3__ForceSMS(struct soap*, const char *URL, _ns3__ForceSMS*);
    soap_POST_recv__ns3__ForceSMS(struct soap*, _ns3__ForceSMS*);
    @endcode

  - <ns3:ForceSMSResponse> @ref _ns3__ForceSMSResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns3__ForceSMSResponse(struct soap*, _ns3__ForceSMSResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns3__ForceSMSResponse(struct soap*, _ns3__ForceSMSResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns3__ForceSMSResponse(struct soap*, const char *URL, _ns3__ForceSMSResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns3__ForceSMSResponse(struct soap*, const char *URL, _ns3__ForceSMSResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns3__ForceSMSResponse(struct soap*, const char *URL, _ns3__ForceSMSResponse*);
    soap_POST_recv__ns3__ForceSMSResponse(struct soap*, _ns3__ForceSMSResponse*);
    @endcode

  - <ns3:GetCertificateWithPin> @ref _ns3__GetCertificateWithPin
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns3__GetCertificateWithPin(struct soap*, _ns3__GetCertificateWithPin*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns3__GetCertificateWithPin(struct soap*, _ns3__GetCertificateWithPin*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns3__GetCertificateWithPin(struct soap*, const char *URL, _ns3__GetCertificateWithPin*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns3__GetCertificateWithPin(struct soap*, const char *URL, _ns3__GetCertificateWithPin*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns3__GetCertificateWithPin(struct soap*, const char *URL, _ns3__GetCertificateWithPin*);
    soap_POST_recv__ns3__GetCertificateWithPin(struct soap*, _ns3__GetCertificateWithPin*);
    @endcode

  - <ns3:GetCertificateWithPinResponse> @ref _ns3__GetCertificateWithPinResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns3__GetCertificateWithPinResponse(struct soap*, _ns3__GetCertificateWithPinResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns3__GetCertificateWithPinResponse(struct soap*, _ns3__GetCertificateWithPinResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns3__GetCertificateWithPinResponse(struct soap*, const char *URL, _ns3__GetCertificateWithPinResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns3__GetCertificateWithPinResponse(struct soap*, const char *URL, _ns3__GetCertificateWithPinResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns3__GetCertificateWithPinResponse(struct soap*, const char *URL, _ns3__GetCertificateWithPinResponse*);
    soap_POST_recv__ns3__GetCertificateWithPinResponse(struct soap*, _ns3__GetCertificateWithPinResponse*);
    @endcode

*/

/**

@section ns4 Top-level root elements of schema "http://schemas.microsoft.com/2003/10/Serialization/"

  - <ns4:anyType> (use wsdl2h option -g to auto-generate type _ns4__anyType)

  - <ns4:anyURI> (use wsdl2h option -g to auto-generate type _ns4__anyURI)

  - <ns4:base64Binary> (use wsdl2h option -g to auto-generate type _ns4__base64Binary)

  - <ns4:boolean> (use wsdl2h option -g to auto-generate type _ns4__boolean)

  - <ns4:byte> (use wsdl2h option -g to auto-generate type _ns4__byte)

  - <ns4:dateTime> (use wsdl2h option -g to auto-generate type _ns4__dateTime)

  - <ns4:decimal> (use wsdl2h option -g to auto-generate type _ns4__decimal)

  - <ns4:double> (use wsdl2h option -g to auto-generate type _ns4__double)

  - <ns4:float> (use wsdl2h option -g to auto-generate type _ns4__float)

  - <ns4:int> (use wsdl2h option -g to auto-generate type _ns4__int)

  - <ns4:long> (use wsdl2h option -g to auto-generate type _ns4__long)

  - <ns4:QName> (use wsdl2h option -g to auto-generate type _ns4__QName)

  - <ns4:short> (use wsdl2h option -g to auto-generate type _ns4__short)

  - <ns4:string> (use wsdl2h option -g to auto-generate type _ns4__string)

  - <ns4:unsignedByte> (use wsdl2h option -g to auto-generate type _ns4__unsignedByte)

  - <ns4:unsignedInt> (use wsdl2h option -g to auto-generate type _ns4__unsignedInt)

  - <ns4:unsignedLong> (use wsdl2h option -g to auto-generate type _ns4__unsignedLong)

  - <ns4:unsignedShort> (use wsdl2h option -g to auto-generate type _ns4__unsignedShort)

  - <ns4:char> (use wsdl2h option -g to auto-generate type _ns4__char)

  - <ns4:duration> (use wsdl2h option -g to auto-generate type _ns4__duration)

  - <ns4:guid> (use wsdl2h option -g to auto-generate type _ns4__guid)

*/

/**

@section ns5 Top-level root elements of schema "http://schemas.datacontract.org/2004/07/Ama.Structures.CCMovelSignature"

  - <ns5:SignRequest> (use wsdl2h option -g to auto-generate type _ns5__SignRequest)

  - <ns5:SignStatus> (use wsdl2h option -g to auto-generate type _ns5__SignStatus)

  - <ns5:SignResponse> (use wsdl2h option -g to auto-generate type _ns5__SignResponse)

  - <ns5:ArrayOfHashStructure> (use wsdl2h option -g to auto-generate type _ns5__ArrayOfHashStructure)

  - <ns5:HashStructure> (use wsdl2h option -g to auto-generate type _ns5__HashStructure)

  - <ns5:MultipleSignRequest> (use wsdl2h option -g to auto-generate type _ns5__MultipleSignRequest)

*/

/* End of CCMovelDigitalSignature.h */
